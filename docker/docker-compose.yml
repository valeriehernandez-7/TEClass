services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - project_network

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    restart: always
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
    volumes:
      - neo4j_data:/data
    networks:
      - project_network

  cassandra-node1:
    image: cassandra:4.1
    container_name: cassandra-node1
    restart: always
    environment:
      - CASSANDRA_CLUSTER_NAME=cassandra-cluster
      - CASSANDRA_SEEDS=cassandra-node1,cassandra-node2
      - CASSANDRA_BROADCAST_ADDRESS=cassandra-node1
    ports:
      - "9042:9042"
    volumes:
      - cassandra_node1:/var/lib/cassandra
    networks:
      - project_network

  cassandra-node2:
    image: cassandra:4.1
    container_name: cassandra-node2
    restart: always
    environment:
      - CASSANDRA_CLUSTER_NAME=cassandra-cluster
      - CASSANDRA_SEEDS=cassandra-node1
      - CASSANDRA_BROADCAST_ADDRESS=cassandra-node2
    volumes:
      - cassandra_node2:/var/lib/cassandra
    networks:
      - project_network

  redis-node-1:
    image: redis:7
    container_name: redis-node-1
    ports:
      - "7001:7001"
      - "17001:17001"
    command: >
      redis-server --port 7001
                   --cluster-enabled yes
                   --cluster-config-file nodes.conf
                   --cluster-node-timeout 5000
                   --appendonly yes
                   --cluster-announce-ip redis-node-1
                   --cluster-announce-port 7001
                   --cluster-announce-bus-port 17001
    networks:
      - project_network 

  redis-node-2:
    image: redis:7
    container_name: redis-node-2
    ports:
      - "7002:7002"
      - "17002:17002"
    command: >
      redis-server --port 7002
                   --cluster-enabled yes
                   --cluster-config-file nodes.conf
                   --cluster-node-timeout 5000
                   --appendonly yes
                   --cluster-announce-ip redis-node-2
                   --cluster-announce-port 7002
                   --cluster-announce-bus-port 17002
    networks:
      - project_network

  redis-node-3:
    image: redis:7
    container_name: redis-node-3
    ports:
      - "7003:7003"
      - "17003:17003"
    command: >
      redis-server --port 7003
                   --cluster-enabled yes
                   --cluster-config-file nodes.conf
                   --cluster-node-timeout 5000
                   --appendonly yes
                   --cluster-announce-ip redis-node-3
                   --cluster-announce-port 7003
                   --cluster-announce-bus-port 17003
    networks:
      - project_network 

networks:
  project_network:
    driver: bridge

volumes:
  mongo_data:
  neo4j_data:
  cassandra_node1:
  cassandra_node2:
  redis_node_1:
  redis_node_2:
  redis_node_3:

# ******************************************** IMPORTANTE ***********************************************
# Ejecutar para el cluster de Redis: docker exec -it redis-node-1 sh
# Seguido: redis-cli --cluster create redis-node-1:7001 redis-node-2:7002 redis-node-3:7003 --cluster-replicas 0
